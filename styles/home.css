@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');

.home-container {
  --background-image: linear-gradient(to bottom, transparent, var(--color-sepia) min(60vh, 500px));
  --row-gap: min(100px, 20vh);
  row-gap: var(--row-gap);
  padding-bottom: var(--row-gap);
}

.home-splash {
  grid-column: 1 / -1;
}
.home-splash-figure {
  width: 90vw;
  margin: 0 auto;
  position: relative;
  margin-top: -55px;
  animation-name: bounceInDown;
  animation-duration: 1s;
  animation-fill-mode: both;
  transform-origin: top center;

  @media (min-width: 550px) {
    width: min(700px, calc(90vw - 100px));
    margin-top: 0;
  }

  & img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
    object-position: bottom left;
    position: relative;
    z-index: 2;
  }

  &::after {
    --size: 50;
    --border-color: transparent;

    height: 55%;
    top: auto;
    bottom: 0;
    border-radius: 20px;
    animation-name: showShadow;
    animation-duration: .6s;
    animation-delay: 1s;
    animation-fill-mode: both;
    background-color: var(--color-sepia);
  }
}
.home-splash-name {
  position: absolute;
  z-index: 2;
  bottom: 8%;
  left: 20%;
  right: 8%;
  font-family: 'Permanent Marker', cursive;
  color: var(--color-red);
  font-size: clamp(18px, 4vw, 35px);

  .typed-cursor {
    display: none;
  }
}

.home-section-media {
  margin: 0;
  padding: 0;
}

.home-section.is-about {
  display: grid;
  column-gap: var(--column-gap);

  & .text-title-big {
    max-width: 9em;
  }

  & trg-video img {
    border-radius: var(--border-radius);
    position: relative;
    z-index: 1;
  }
  & trg-video > .has-dotsShadow::after {
    border-radius: var(--border-radius);
    transition: transform 200ms;
  }
  & trg-video > .has-dotsShadow:hover::after {
    transform: translate(-1em, 1em);
    border: solid 1px var(--color-gray-light);
  }
  & trg-video::after {
    --size: 40;
    background-color: var(--color-red);
    mix-blend-mode: multiply;
  }
  & trg-video:hover::after {
    background-color: transparent;
  }

  @media (min-width: 1000px) {
    grid-column: 2 / -1;
    grid-template-columns: min(500px, 40vw) 1fr;

    & .home-section-content {
      border-bottom: solid 2px;
      padding-bottom: var(--row-gap);
    }

    & trg-video img {
      border-radius: var(--border-radius) 0 0 var(--border-radius);
    }
    .home-section-media {
      align-self: start;
      position: sticky;
      top: 100px;
    }
  }
}

.home-section.is-contact {
  display: grid;
  column-gap: var(--column-gap);
  row-gap: 2em;

  & address {
    font-style: normal;

    & p {
      margin-top: 0;
    }
  }
  & ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  & li {
    margin: .2em 0;
  }
  & img {
    vertical-align: middle;
  }

  @media (min-width: 700px) {
    grid-template-columns: repeat(2, minmax(0, 1fr));

    & header {
      grid-column: 1 / -1;
    }
  }
  @media (min-width: 1050px) {
    grid-template-columns: repeat(3, minmax(0, 1fr));

    & header {
      grid-column: 1;
    }
  }
}

.home-section.is-faq {
  display: grid;
  column-gap: var(--column-gap);
  row-gap: 2em;
  border-top: solid 2px;
  padding-top: var(--row-gap);

  & .faq {
    border-bottom: solid 2px;
    padding-bottom: var(--row-gap);
  }

  @media (min-width: 1050px) {
    grid-template-columns: repeat(3, minmax(0, 1fr));

    & .faq {
      grid-column: 2 / 4;
    }
  }

  .has-dotsShadow::after {
    animation: anim-shape-1 5s linear infinite alternate both;
    height: 200px;
    width: 250px;
    top: -120px;
    left: -100px;
    --color: var(--color-gray);
    --border-color: var(--color-gray-light);
  }
}

/* https://github.com/animate-css/animate.css/blob/main/source/bouncing_entrances/bounceInDown.css */
@keyframes bounceInDown {
  from,
  60%,
  75%,
  90%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0) rotate(5deg);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 0, 0) rotate(0deg);
  }

  75% {
    transform: translate3d(0, -35px, 0) rotate(2deg);
  }

  90% {
    transform: translate3d(0, -20px, 0) rotate(-1deg);
  }

  to {
    transform: translate3d(0, -25px, 0) rotate(0deg);
  }
}


@keyframes showShadow {
  from {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(-50px, 50px);
  }
  to {
    transform: translate(-10px, 10px);
  }
}